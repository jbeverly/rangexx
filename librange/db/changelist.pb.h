// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: changelist.proto

#ifndef PROTOBUF_changelist_2eproto__INCLUDED
#define PROTOBUF_changelist_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace range {
namespace db {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_changelist_2eproto();
void protobuf_AssignDesc_changelist_2eproto();
void protobuf_ShutdownFile_changelist_2eproto();

class ChangeList;
class ChangeList_Change;
class ChangeList_Change_TimeStamp;
class ChangeList_Change_Item;

// ===================================================================

class ChangeList_Change_TimeStamp : public ::google::protobuf::Message {
 public:
  ChangeList_Change_TimeStamp();
  virtual ~ChangeList_Change_TimeStamp();

  ChangeList_Change_TimeStamp(const ChangeList_Change_TimeStamp& from);

  inline ChangeList_Change_TimeStamp& operator=(const ChangeList_Change_TimeStamp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChangeList_Change_TimeStamp& default_instance();

  void Swap(ChangeList_Change_TimeStamp* other);

  // implements Message ----------------------------------------------

  ChangeList_Change_TimeStamp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChangeList_Change_TimeStamp& from);
  void MergeFrom(const ChangeList_Change_TimeStamp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 seconds = 1;
  inline bool has_seconds() const;
  inline void clear_seconds();
  static const int kSecondsFieldNumber = 1;
  inline ::google::protobuf::uint64 seconds() const;
  inline void set_seconds(::google::protobuf::uint64 value);

  // required uint32 msec = 2;
  inline bool has_msec() const;
  inline void clear_msec();
  static const int kMsecFieldNumber = 2;
  inline ::google::protobuf::uint32 msec() const;
  inline void set_msec(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:range.db.ChangeList.Change.TimeStamp)
 private:
  inline void set_has_seconds();
  inline void clear_has_seconds();
  inline void set_has_msec();
  inline void clear_has_msec();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 seconds_;
  ::google::protobuf::uint32 msec_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_changelist_2eproto();
  friend void protobuf_AssignDesc_changelist_2eproto();
  friend void protobuf_ShutdownFile_changelist_2eproto();

  void InitAsDefaultInstance();
  static ChangeList_Change_TimeStamp* default_instance_;
};
// -------------------------------------------------------------------

class ChangeList_Change_Item : public ::google::protobuf::Message {
 public:
  ChangeList_Change_Item();
  virtual ~ChangeList_Change_Item();

  ChangeList_Change_Item(const ChangeList_Change_Item& from);

  inline ChangeList_Change_Item& operator=(const ChangeList_Change_Item& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChangeList_Change_Item& default_instance();

  void Swap(ChangeList_Change_Item* other);

  // implements Message ----------------------------------------------

  ChangeList_Change_Item* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChangeList_Change_Item& from);
  void MergeFrom(const ChangeList_Change_Item& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string key = 1;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline const ::std::string& key() const;
  inline void set_key(const ::std::string& value);
  inline void set_key(const char* value);
  inline void set_key(const char* value, size_t size);
  inline ::std::string* mutable_key();
  inline ::std::string* release_key();
  inline void set_allocated_key(::std::string* key);

  // required uint64 version = 2;
  inline bool has_version() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 2;
  inline ::google::protobuf::uint64 version() const;
  inline void set_version(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:range.db.ChangeList.Change.Item)
 private:
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_version();
  inline void clear_has_version();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* key_;
  ::google::protobuf::uint64 version_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_changelist_2eproto();
  friend void protobuf_AssignDesc_changelist_2eproto();
  friend void protobuf_ShutdownFile_changelist_2eproto();

  void InitAsDefaultInstance();
  static ChangeList_Change_Item* default_instance_;
};
// -------------------------------------------------------------------

class ChangeList_Change : public ::google::protobuf::Message {
 public:
  ChangeList_Change();
  virtual ~ChangeList_Change();

  ChangeList_Change(const ChangeList_Change& from);

  inline ChangeList_Change& operator=(const ChangeList_Change& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChangeList_Change& default_instance();

  void Swap(ChangeList_Change* other);

  // implements Message ----------------------------------------------

  ChangeList_Change* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChangeList_Change& from);
  void MergeFrom(const ChangeList_Change& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ChangeList_Change_TimeStamp TimeStamp;
  typedef ChangeList_Change_Item Item;

  // accessors -------------------------------------------------------

  // required .range.db.ChangeList.Change.TimeStamp timestamp = 1;
  inline bool has_timestamp() const;
  inline void clear_timestamp();
  static const int kTimestampFieldNumber = 1;
  inline const ::range::db::ChangeList_Change_TimeStamp& timestamp() const;
  inline ::range::db::ChangeList_Change_TimeStamp* mutable_timestamp();
  inline ::range::db::ChangeList_Change_TimeStamp* release_timestamp();
  inline void set_allocated_timestamp(::range::db::ChangeList_Change_TimeStamp* timestamp);

  // repeated .range.db.ChangeList.Change.Item items = 2;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 2;
  inline const ::range::db::ChangeList_Change_Item& items(int index) const;
  inline ::range::db::ChangeList_Change_Item* mutable_items(int index);
  inline ::range::db::ChangeList_Change_Item* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::range::db::ChangeList_Change_Item >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::range::db::ChangeList_Change_Item >*
      mutable_items();

  // @@protoc_insertion_point(class_scope:range.db.ChangeList.Change)
 private:
  inline void set_has_timestamp();
  inline void clear_has_timestamp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::range::db::ChangeList_Change_TimeStamp* timestamp_;
  ::google::protobuf::RepeatedPtrField< ::range::db::ChangeList_Change_Item > items_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_changelist_2eproto();
  friend void protobuf_AssignDesc_changelist_2eproto();
  friend void protobuf_ShutdownFile_changelist_2eproto();

  void InitAsDefaultInstance();
  static ChangeList_Change* default_instance_;
};
// -------------------------------------------------------------------

class ChangeList : public ::google::protobuf::Message {
 public:
  ChangeList();
  virtual ~ChangeList();

  ChangeList(const ChangeList& from);

  inline ChangeList& operator=(const ChangeList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChangeList& default_instance();

  void Swap(ChangeList* other);

  // implements Message ----------------------------------------------

  ChangeList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChangeList& from);
  void MergeFrom(const ChangeList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ChangeList_Change Change;

  // accessors -------------------------------------------------------

  // required uint64 current_version = 1;
  inline bool has_current_version() const;
  inline void clear_current_version();
  static const int kCurrentVersionFieldNumber = 1;
  inline ::google::protobuf::uint64 current_version() const;
  inline void set_current_version(::google::protobuf::uint64 value);

  // repeated .range.db.ChangeList.Change change = 2;
  inline int change_size() const;
  inline void clear_change();
  static const int kChangeFieldNumber = 2;
  inline const ::range::db::ChangeList_Change& change(int index) const;
  inline ::range::db::ChangeList_Change* mutable_change(int index);
  inline ::range::db::ChangeList_Change* add_change();
  inline const ::google::protobuf::RepeatedPtrField< ::range::db::ChangeList_Change >&
      change() const;
  inline ::google::protobuf::RepeatedPtrField< ::range::db::ChangeList_Change >*
      mutable_change();

  // @@protoc_insertion_point(class_scope:range.db.ChangeList)
 private:
  inline void set_has_current_version();
  inline void clear_has_current_version();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 current_version_;
  ::google::protobuf::RepeatedPtrField< ::range::db::ChangeList_Change > change_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_changelist_2eproto();
  friend void protobuf_AssignDesc_changelist_2eproto();
  friend void protobuf_ShutdownFile_changelist_2eproto();

  void InitAsDefaultInstance();
  static ChangeList* default_instance_;
};
// ===================================================================


// ===================================================================

// ChangeList_Change_TimeStamp

// required uint64 seconds = 1;
inline bool ChangeList_Change_TimeStamp::has_seconds() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChangeList_Change_TimeStamp::set_has_seconds() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChangeList_Change_TimeStamp::clear_has_seconds() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChangeList_Change_TimeStamp::clear_seconds() {
  seconds_ = GOOGLE_ULONGLONG(0);
  clear_has_seconds();
}
inline ::google::protobuf::uint64 ChangeList_Change_TimeStamp::seconds() const {
  return seconds_;
}
inline void ChangeList_Change_TimeStamp::set_seconds(::google::protobuf::uint64 value) {
  set_has_seconds();
  seconds_ = value;
}

// required uint32 msec = 2;
inline bool ChangeList_Change_TimeStamp::has_msec() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChangeList_Change_TimeStamp::set_has_msec() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ChangeList_Change_TimeStamp::clear_has_msec() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ChangeList_Change_TimeStamp::clear_msec() {
  msec_ = 0u;
  clear_has_msec();
}
inline ::google::protobuf::uint32 ChangeList_Change_TimeStamp::msec() const {
  return msec_;
}
inline void ChangeList_Change_TimeStamp::set_msec(::google::protobuf::uint32 value) {
  set_has_msec();
  msec_ = value;
}

// -------------------------------------------------------------------

// ChangeList_Change_Item

// required string key = 1;
inline bool ChangeList_Change_Item::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChangeList_Change_Item::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChangeList_Change_Item::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChangeList_Change_Item::clear_key() {
  if (key_ != &::google::protobuf::internal::kEmptyString) {
    key_->clear();
  }
  clear_has_key();
}
inline const ::std::string& ChangeList_Change_Item::key() const {
  return *key_;
}
inline void ChangeList_Change_Item::set_key(const ::std::string& value) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(value);
}
inline void ChangeList_Change_Item::set_key(const char* value) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(value);
}
inline void ChangeList_Change_Item::set_key(const char* value, size_t size) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ChangeList_Change_Item::mutable_key() {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  return key_;
}
inline ::std::string* ChangeList_Change_Item::release_key() {
  clear_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = key_;
    key_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ChangeList_Change_Item::set_allocated_key(::std::string* key) {
  if (key_ != &::google::protobuf::internal::kEmptyString) {
    delete key_;
  }
  if (key) {
    set_has_key();
    key_ = key;
  } else {
    clear_has_key();
    key_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint64 version = 2;
inline bool ChangeList_Change_Item::has_version() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChangeList_Change_Item::set_has_version() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ChangeList_Change_Item::clear_has_version() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ChangeList_Change_Item::clear_version() {
  version_ = GOOGLE_ULONGLONG(0);
  clear_has_version();
}
inline ::google::protobuf::uint64 ChangeList_Change_Item::version() const {
  return version_;
}
inline void ChangeList_Change_Item::set_version(::google::protobuf::uint64 value) {
  set_has_version();
  version_ = value;
}

// -------------------------------------------------------------------

// ChangeList_Change

// required .range.db.ChangeList.Change.TimeStamp timestamp = 1;
inline bool ChangeList_Change::has_timestamp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChangeList_Change::set_has_timestamp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChangeList_Change::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChangeList_Change::clear_timestamp() {
  if (timestamp_ != NULL) timestamp_->::range::db::ChangeList_Change_TimeStamp::Clear();
  clear_has_timestamp();
}
inline const ::range::db::ChangeList_Change_TimeStamp& ChangeList_Change::timestamp() const {
  return timestamp_ != NULL ? *timestamp_ : *default_instance_->timestamp_;
}
inline ::range::db::ChangeList_Change_TimeStamp* ChangeList_Change::mutable_timestamp() {
  set_has_timestamp();
  if (timestamp_ == NULL) timestamp_ = new ::range::db::ChangeList_Change_TimeStamp;
  return timestamp_;
}
inline ::range::db::ChangeList_Change_TimeStamp* ChangeList_Change::release_timestamp() {
  clear_has_timestamp();
  ::range::db::ChangeList_Change_TimeStamp* temp = timestamp_;
  timestamp_ = NULL;
  return temp;
}
inline void ChangeList_Change::set_allocated_timestamp(::range::db::ChangeList_Change_TimeStamp* timestamp) {
  delete timestamp_;
  timestamp_ = timestamp;
  if (timestamp) {
    set_has_timestamp();
  } else {
    clear_has_timestamp();
  }
}

// repeated .range.db.ChangeList.Change.Item items = 2;
inline int ChangeList_Change::items_size() const {
  return items_.size();
}
inline void ChangeList_Change::clear_items() {
  items_.Clear();
}
inline const ::range::db::ChangeList_Change_Item& ChangeList_Change::items(int index) const {
  return items_.Get(index);
}
inline ::range::db::ChangeList_Change_Item* ChangeList_Change::mutable_items(int index) {
  return items_.Mutable(index);
}
inline ::range::db::ChangeList_Change_Item* ChangeList_Change::add_items() {
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::range::db::ChangeList_Change_Item >&
ChangeList_Change::items() const {
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::range::db::ChangeList_Change_Item >*
ChangeList_Change::mutable_items() {
  return &items_;
}

// -------------------------------------------------------------------

// ChangeList

// required uint64 current_version = 1;
inline bool ChangeList::has_current_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChangeList::set_has_current_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChangeList::clear_has_current_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChangeList::clear_current_version() {
  current_version_ = GOOGLE_ULONGLONG(0);
  clear_has_current_version();
}
inline ::google::protobuf::uint64 ChangeList::current_version() const {
  return current_version_;
}
inline void ChangeList::set_current_version(::google::protobuf::uint64 value) {
  set_has_current_version();
  current_version_ = value;
}

// repeated .range.db.ChangeList.Change change = 2;
inline int ChangeList::change_size() const {
  return change_.size();
}
inline void ChangeList::clear_change() {
  change_.Clear();
}
inline const ::range::db::ChangeList_Change& ChangeList::change(int index) const {
  return change_.Get(index);
}
inline ::range::db::ChangeList_Change* ChangeList::mutable_change(int index) {
  return change_.Mutable(index);
}
inline ::range::db::ChangeList_Change* ChangeList::add_change() {
  return change_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::range::db::ChangeList_Change >&
ChangeList::change() const {
  return change_;
}
inline ::google::protobuf::RepeatedPtrField< ::range::db::ChangeList_Change >*
ChangeList::mutable_change() {
  return &change_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace db
}  // namespace range

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_changelist_2eproto__INCLUDED
