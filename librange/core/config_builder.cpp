/*
 * This file is part of range++.
 *
 * range++ is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * range++ is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with range++.  If not, see <http://www.gnu.org/licenses/>.
 */

#include "config_builder.h"

namespace range {

//##############################################################################
//##############################################################################
// Config
//##############################################################################
//##############################################################################

//##############################################################################
//##############################################################################
Config::Config() { }

//##############################################################################
//##############################################################################
boost::shared_ptr<db::BackendInterface>
Config::db_backend() const
{
}

//##############################################################################
//##############################################################################
boost::shared_ptr<graph::NodeIfaceAbstractFactory>
Config::node_factory() const
{
}

//##############################################################################
//##############################################################################
boost::shared_ptr<graph::GraphdbAbstractFactory>
Config::graph_factory() const
{
}

//##############################################################################
//##############################################################################
boost::shared_ptr<compiler::functor_map_t>
Config::range_symbol_table() const
{
}

//##############################################################################
//##############################################################################
db::ConfigIface&
Config::db() const
{
}

//##############################################################################
//##############################################################################
StoredConfigIface&
Config::stored() const
{
}

//##############################################################################
//##############################################################################
ReaderConfigIface&
Config::reader() const
{
}

//##############################################################################
//##############################################################################
// DbConfig
//##############################################################################
//##############################################################################

//##############################################################################
//##############################################################################
DbConfig::DbConfig() {}

//##############################################################################
//##############################################################################
const std::string&
DbConfig::db_home() const
{
}

//##############################################################################
//##############################################################################
size_t
DbConfig::cache_size() const
{
}

boost::shared_ptr<ConfigIface>
config_builder(const std::string& filename)
{
        (void)(filename);
            return boost::make_shared<Config>();
}

} /* namespace range */
